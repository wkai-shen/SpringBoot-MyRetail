/**
 * Spring Boot 2.1.x Project Build
 */

// Apply the build scan and Spring Boot 2.1.x plugin
plugins {
    id 'com.gradle.build-scan' version '2.0.2'
    // the plugin detects when certain other plugins are applied and reacts accordingly.
    // For example, when the java plugin is applied a task for building an executable jar is automatically configured.
    id 'org.springframework.boot' version '2.1.3.RELEASE'
}

group 'com.myRetail'
//artifactId 'productApp' in Maven but in Gradle this is 
version '1.0.0-SNAPSHOT'

apply plugin: 'java'
// https://docs.spring.io/spring-boot/docs/current/gradle-plugin/reference/html/
// Allows you to omit version numbers when declaring dependencies that are managed in the bom.
apply plugin: 'io.spring.dependency-management'

sourceCompatibility = 1.8

// Add the repository for dependency resolution
repositories {
    jcenter()
}

// Add Spring Boot BOM and dependencies for the Spring Boot Starter Web/Test
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.h2database:h2'
    implementation 'com.google.guava:guava:27.1-jre'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

//    components {
//        withModule('org.springframework:spring-beans') {
//            allVariants {
//                withDependencyConstraints {
//                    // Need to patch constraints because snakeyaml is an optional dependency
//                    it.findAll { it.name == 'snakeyaml' }.each { it.version { strictly '1.19' } }
//                }
//            }
//        }
//    }
}

// Define the main class used for the executable artifacts
bootJar {
    mainClassName = 'com.myRetail.ProductAppTargetApplication'
}

// Configure the Gradle's Build Scan plugin
buildScan {

    // always accept the terms of service
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'

    // always publish a build scan
    publishAlways()
}